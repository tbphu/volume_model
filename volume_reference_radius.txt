function MAX(a, b)
  piecewise(a, a >= b, b);
end

function modulo(a, b)
  a - b*floor(a/b);
end

model volume_rheology

  // compartments
  compartment V_tot_liter;
  compartment extra = 1;
  dr_b := 0
  r_b = 0.3
  r_os = 1.2
  r := r_os + r_b  
  dr := dr_os + dr_b
  r_os' = dr_os 
  r_b' = dr_b


  V_tot_fl := 4 / 3 * pi * r^3
  V_ref := 4 /3 * pi * R^3     
  V_tot_liter := V_tot_fl * 1e-15; // um^3
 
  // species
  species c_e in extra = 240; // mM hat Bjoern gemessen (SD-F)
  species c_i in V_tot_liter = 700; // mM

  // internal and external osmotic
  pi_i    := c_i * R * T ;
  pi_e    := c_e * R * T ;
  
  // constants
  R = 8.314; // J/mol/K
  T = 303; // K 30Â°C
  
  // geometric calculations
  G := 4*pi*r^2 // surface of sphere in um^2
 
  // water flow over membrane
  Lp = 1.19e-6; // um/s/Pa #Klipp 2005
  dr_os := - Lp *(pi_t + pi_e - pi_i) 
  
  // plastic expansion rate 
  pi_t = 0.200e6; // Pa
  pi_tc_0 = 0.2e6; // Pa
  d = 0.115; // um Goldenbogen, Giese 2016
  phi = 1.e-9; // 1/Pa/s
  pi_tc := pi_tc_0
 
 // wall mechanics
  nu := 0.5
  R = r/(1 + (1 - nu) * (pi_t * r) / (E * 2 * d)) 
  modulus_adjustment = 3.0; // TODO: check this !!!
  E = modulus_adjustment*2.58e6; // Pa Goldenbogen, Giese 2016    
  
  pi_t'  = E * 2 * d / (1-nu) * (dr * R - r * dR) / (R * r^2) - dr / r * pi_t 
  dR := phi * R * r / (2 * d) * MAX(pi_t - pi_tc, 0) 
  R' = dR  
  
  // nutrient uptake and consumptions
  k_nutrient = 0.7e-16; // mM/s/um^2   
  k_deg = 1.1e-16;
  k_transport = 0 
  
  => c_i; k_nutrient * G;
  c_i =>; k_deg * V_tot_fl;
  c_i=> c_e ; k_transport * (c_i - c_e)
  
   // equalization of ci and ce  at time 7200

   at time > 7200: k_nutrient = 0
   at time > 7200: k_transport = 2.5e-10
      


end




